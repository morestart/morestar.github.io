<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Provider数据共享</title>
    <url>/2020/03/31/Provider%20%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB/</url>
    <content><![CDATA[<h2 id="Provider-数据共享"><a href="#Provider-数据共享" class="headerlink" title="Provider 数据共享"></a>Provider 数据共享</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">provider:</span></span><br></pre></td></tr></table></figure>

<p>默认添加最新版本的依赖</p>
<h3 id="创建store类"><a href="#创建store类" class="headerlink" title="创建store类"></a>创建store类</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CounterProvider</span> <span class="title">with</span> <span class="title">ChangeNotifier</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> _number = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> value =&gt; _number;</span><br><span class="line">  <span class="keyword">void</span> changeNumber() &#123;</span><br><span class="line">    _number++;</span><br><span class="line">    notifyListeners();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>包含两个方法,get方法用于获取数值,changeNumber方法用于改变数值并通知监听改变.每个provider的store类结构都差不多.</p>
<h3 id="main-dart"><a href="#main-dart" class="headerlink" title="main.dart"></a>main.dart</h3><p>在顶层声明的provider,默认是全局的.</p>
<p>如果有多个provider,使用<code>MultiProvider</code></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  runApp(MultiProvider(</span><br><span class="line">    providers: [</span><br><span class="line">      ChangeNotifierProvider(</span><br><span class="line">        create: (_) =&gt;</span><br><span class="line">            ThemeBean(themeType: ThemeType.light, themeData: ThemeData.light()),</span><br><span class="line">      ),</span><br><span class="line">      ChangeNotifierProvider(create: (_) =&gt; CounterProvider())</span><br><span class="line">    ],</span><br><span class="line">    child: MyApp(),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  MyApp() &#123;</span><br><span class="line">    <span class="keyword">final</span> router = Router();</span><br><span class="line">    Routers.configureRoutes(router);</span><br><span class="line">    Application.router = router;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      theme: Provider.of&lt;ThemeBean&gt;(context, listen: <span class="keyword">true</span>).themeData,</span><br><span class="line">      onGenerateRoute: Application.router.generator,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><p>在home_page中获取来自另一个页面改变的数据</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">Text(<span class="string">"This is from counter provider:<span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">     Provider.of&lt;CounterProvider&gt;(context).value.toString()</span></span></span><br><span class="line"><span class="string"><span class="subst">   &#125;</span>"</span></span><br><span class="line">),</span><br></pre></td></tr></table></figure>

<p>使用<code>Provider.of&lt;CounterProvider&gt;(context).value</code>获取数据, 泛型可以不填,但是为了程序的健壮,最好是写上.</p>
<h3 id="改变数据"><a href="#改变数据" class="headerlink" title="改变数据"></a>改变数据</h3><p>此处我们点击按钮使数值+1, 同样使用<code>Provider.of&lt;CounterProvider&gt;(context, listen: false).changeNumber();</code>方法, listen参数主要是是否需要刷新页面,此处调用改变数值的方法,不需要刷新页面, listen值默认是true,调用changeNumber后,在这个函数中会调用<code>notifyListeners()</code>方法,通知监听这个数值的地方进行刷新,从而得到跨组件数据共享的作用.</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProviderCounter</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">'Provider counter'</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Text(<span class="string">'data: <span class="subst">$&#123;Provider.of&lt;CounterProvider&gt;(context).value&#125;</span>'</span>),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: FloatingActionButton(</span><br><span class="line">        onPressed: () &#123;</span><br><span class="line">          Provider.of&lt;CounterProvider&gt;(context, listen: <span class="keyword">false</span>).changeNumber();</span><br><span class="line">        &#125;,</span><br><span class="line">        child: Icon(Icons.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>flutter 路由</title>
    <url>/2020/03/26/flutter%20%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h2 id="pub安装"><a href="#pub安装" class="headerlink" title="pub安装"></a>pub安装</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fluro:</span> <span class="number">1.6</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<h2 id="fluro的使用"><a href="#fluro的使用" class="headerlink" title="fluro的使用"></a>fluro的使用</h2><p>在详细介绍fluro的几个基本功能之前,先看一下本次代码的文件目录</p>
<p><img src="https://github.com/morestart/morestart.github.io/blob/master/images/fluro.png" alt="img"></p>
<h4 id="创建router文件夹"><a href="#创建router文件夹" class="headerlink" title="创建router文件夹"></a>创建router文件夹</h4><p><code>application.dart</code>内容:</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:fluro/fluro.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> Router router;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>routes.dart</code>内容:</p>
<p>这里主要是定义flutter的路由</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:fluro/fluro.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/router/router_handler.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Routers</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> root = <span class="string">"/"</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> home = <span class="string">"/home"</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> paramPage = <span class="string">"/param"</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> returnParamsPage = <span class="string">"/returnParam"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> configureRoutes(Router router) &#123;</span><br><span class="line">    router.notFoundHandler = Handler(</span><br><span class="line">        handlerFunc: (BuildContext context, <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; params) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'handler not find'</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    router.define(root, handler: splashHandler);</span><br><span class="line">    router.define(home, handler: homeHandler);</span><br><span class="line">    router.define(paramPage, handler: paramHandler);</span><br><span class="line">    router.define(returnParamsPage, handler: returnParamHandler);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>router_handler</code>内容:</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:fluro/fluro.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/pages/demo/demo_page.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/pages/demo/return_params_page.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/pages/home/home_page.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/pages/splash/splash_page.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> splashHandler = Handler(</span><br><span class="line">    handlerFunc: (BuildContext context, <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; params) &#123;</span><br><span class="line">  <span class="keyword">return</span> SplashPage();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> homeHandler = Handler(</span><br><span class="line">    handlerFunc: (BuildContext context, <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; params) &#123;</span><br><span class="line">  <span class="keyword">return</span> HomePage();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> paramHandler = Handler(</span><br><span class="line">    handlerFunc: (BuildContext context, <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; params) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'---------------'</span>);</span><br><span class="line">  <span class="built_in">print</span>(params);</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'---------------'</span>);</span><br><span class="line">  <span class="comment">// 注意first是fluro固定的写法,相当于params['name'][0]</span></span><br><span class="line">  <span class="built_in">String</span> name = params[<span class="string">"name"</span>]?.first;</span><br><span class="line">  <span class="built_in">String</span> age = params[<span class="string">"age"</span>]?.first;</span><br><span class="line">  <span class="built_in">String</span> sex = params[<span class="string">"sex"</span>]?.first;</span><br><span class="line">  <span class="built_in">String</span> score = params[<span class="string">"score"</span>]?.first;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> DemoPage(</span><br><span class="line">    name: name,</span><br><span class="line">    age: age,</span><br><span class="line">    sex: sex,</span><br><span class="line">    score: score,</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> returnParamHandler = Handler(</span><br><span class="line">    handlerFunc: (BuildContext context, <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; params) &#123;</span><br><span class="line">  <span class="keyword">return</span> ReturnParamsPage();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在<code>navigator_util</code>中定义具体的路由跳转位置:</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:fluro/fluro.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/router/application.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/router/routes.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NavigatorUtil</span> </span>&#123;</span><br><span class="line">  <span class="comment">// replace=true就是把这个页面移除,后退时不会退到这个界面上来</span></span><br><span class="line">  <span class="comment">// home 页面</span></span><br><span class="line">  <span class="keyword">static</span> goHomePage(BuildContext context) &#123;</span><br><span class="line">    Application.router.navigateTo(context, Routers.home,</span><br><span class="line">        transition: TransitionType.fadeIn, replace: <span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 路由传参页面</span></span><br><span class="line">  <span class="keyword">static</span> goParamPage(</span><br><span class="line">      BuildContext context, <span class="built_in">String</span> name, <span class="built_in">String</span> age, <span class="built_in">String</span> score, <span class="built_in">String</span> sex) &#123;</span><br><span class="line">    Application.router.navigateTo(context,</span><br><span class="line">        Routers.paramPage + <span class="string">"?name=<span class="subst">$name</span>&amp;age=<span class="subst">$age</span>&amp;score=<span class="subst">$score</span>&amp;sex=<span class="subst">$sex</span>"</span>,</span><br><span class="line">        transition: TransitionType.cupertino);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">带参数的返回</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> goBackWithParams(BuildContext context, result) &#123;</span><br><span class="line">    Navigator.pop(context, result);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 跳转到有参数返回的页面</span></span><br><span class="line">  <span class="keyword">static</span> Future goReturnParamsPage(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Application.router.navigateTo(context, Routers.returnParamsPage,</span><br><span class="line">        transition: TransitionType.cupertino);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>splash_page</code>的内容:</p>
<p>等待3秒进入home_page</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/utils/navigator_util.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SplashPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _SplashPageState createState() =&gt; _SplashPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SplashPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SplashPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    <span class="comment">// 等待3s进入home page</span></span><br><span class="line">    Future.delayed(<span class="built_in">Duration</span>(seconds: <span class="number">3</span>)).then((_) &#123;</span><br><span class="line">      NavigatorUtil.goHomePage(context);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Container(</span><br><span class="line">          child: Text(<span class="string">'splash page'</span>),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>demo_page.dart</code> 接收来自homepage的参数</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> age;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> score;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> sex;</span><br><span class="line"></span><br><span class="line">  DemoPage(&#123;<span class="keyword">this</span>.name, <span class="keyword">this</span>.age, <span class="keyword">this</span>.score, <span class="keyword">this</span>.sex&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _DemoPageState createState() =&gt; _DemoPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DemoPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">DemoPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">'<span class="subst">$&#123;widget.name&#125;</span>'</span>),</span><br><span class="line">            Text(<span class="string">'<span class="subst">$&#123;widget.age.toString()&#125;</span>'</span>),</span><br><span class="line">            Text(<span class="string">'<span class="subst">$&#123;widget.score.toString()&#125;</span>'</span>),</span><br><span class="line">            Text(<span class="string">'<span class="subst">$&#123;widget.sex&#125;</span>'</span>),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>从子页面返回数据到主页面</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutterdemo/utils/navigator_util.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReturnParamsPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            RaisedButton(</span><br><span class="line">              child: Text(<span class="string">'我是带着返回值的按钮'</span>),</span><br><span class="line">              onPressed: () &#123;</span><br><span class="line">                NavigatorUtil.goBackWithParams(context, <span class="string">"hhh"</span>);</span><br><span class="line">              &#125;,</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p><code>main.dart</code>的内容:</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  MyApp() &#123;</span><br><span class="line">    <span class="keyword">final</span> router = Router();</span><br><span class="line">    Routers.configureRoutes(router);</span><br><span class="line">    Application.router = router;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      onGenerateRoute: Application.router.generator,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>People</title>
    <url>/2020/03/25/People/</url>
    <content><![CDATA[<p>我们普通人这一辈子没有那么多轰轰烈烈的事情可以记忆,</p>
<p>只有那些淅淅沥沥,微不足道的小事,</p>
<p>让我们刻骨铭心.</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>傻气</title>
    <url>/2020/03/17/%E5%82%BB%E6%B0%94/</url>
    <content><![CDATA[<p>那年天真傻气</p>
<p>都是未来怀念的美好.</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter json数据解析</title>
    <url>/2019/11/20/Flutter%20json%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h2 id="手动序列化"><a href="#手动序列化" class="headerlink" title="手动序列化"></a>手动序列化</h2><p>使用dart:convert手动序列化数据</p>
<p>json数据:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"John Smith"</span>,</span><br><span class="line">  <span class="attr">"email"</span>: <span class="string">"john@example.com"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>使用<code>jsonDecode()</code>方法来解析json数据</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; user = jsonDecode(jsonString);</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(user[<span class="string">'name'</span>]);</span><br></pre></td></tr></table></figure>

<p>但是这样解析会存在一个问题,就是会失去静态类型的语言特性就是类型安全</p>
<h2 id="模型类中序列化json数据"><a href="#模型类中序列化json数据" class="headerlink" title="模型类中序列化json数据"></a>模型类中序列化json数据</h2><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> email;</span><br><span class="line"></span><br><span class="line">  User(&#123;<span class="keyword">this</span>.name, <span class="keyword">this</span>.email&#125;);</span><br><span class="line">  User.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) </span><br><span class="line">     : name= json[<span class="string">'name'</span>],</span><br><span class="line">      email= json[<span class="string">'email'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; &#123;</span><br><span class="line">    <span class="string">'name'</span>: name,</span><br><span class="line">    <span class="string">'email'</span>: email</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  <span class="built_in">String</span> jsonString = <span class="string">"&#123;\"name\": \"ctl\", \"email\": \"1111222\"&#125;"</span>;</span><br><span class="line">  <span class="built_in">Map</span> userMap = jsonDecode(jsonString);</span><br><span class="line">  <span class="keyword">var</span> user = User.fromJson(userMap);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'Howdy, <span class="subst">$&#123;user.name&#125;</span>!'</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'We sent the verification link to <span class="subst">$&#123;user.email&#125;</span>.'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>与dio库结合</p>
<p>模型类:</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OneModel</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> id;</span><br><span class="line"></span><br><span class="line">  OneModel(&#123;<span class="keyword">this</span>.id&#125;);</span><br><span class="line"></span><br><span class="line">  OneModel.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) : id = json[<span class="string">'id'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>请求类:</p>
<p>因为dio请求过来的数据已经是map类型了,所以不需要jsonDecode进行编码,直接调用模型类即可解析</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RequestImage</span> </span>&#123;</span><br><span class="line">	<span class="keyword">final</span> <span class="built_in">String</span> url = <span class="string">"http://v3.wufazhuce.com:8000/api/channel/one/0/北京"</span>;</span><br><span class="line"></span><br><span class="line">	Future getImage() <span class="keyword">async</span> &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Response response = <span class="keyword">await</span> Dio().<span class="keyword">get</span>(url);</span><br><span class="line">			<span class="built_in">print</span>(response.data.runtimeType);</span><br><span class="line"><span class="comment">//			Map dataMap = jsonDecode(response.data['data']);</span></span><br><span class="line"></span><br><span class="line">			<span class="keyword">var</span> user =  OneModel.fromJson(response.data[<span class="string">'data'</span>]);</span><br><span class="line">			<span class="built_in">print</span>(user.id);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">			<span class="built_in">print</span>(e);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>珍重</title>
    <url>/2019/06/21/%E7%8F%8D%E9%87%8D/</url>
    <content><![CDATA[<h2 id="又是一年花开时"><a href="#又是一年花开时" class="headerlink" title="又是一年花开时"></a>又是一年花开时</h2><p>凤凰花开两季,一季新生来,一季老生走.</p>
<p>又到了花开的时候了,我们也各自奔向远方.</p>
<p>我的朋友们,今朝别离,各自珍重.</p>
<p>愿我们十年之后,二十年之后,三十年之后再见!</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>2019新春</title>
    <url>/2019/02/05/2019-2-5-2019%E6%96%B0%E6%98%A5/</url>
    <content><![CDATA[<p>爆竹声中一岁除,春风送暖入屠苏</p>
<p>新春佳节,新的一年要更加努力,去自己想去的地方!</p>
<p>新春快乐~</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Django图片上传</title>
    <url>/2019/01/15/Django%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h2 id="Python-Web-学习之图片上传"><a href="#Python-Web-学习之图片上传" class="headerlink" title="Python Web 学习之图片上传"></a>Python Web 学习之图片上传</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c</span><span class="params">(request)</span>:</span></span><br><span class="line">    print(request.GET)</span><br><span class="line">    print(request.POST)</span><br><span class="line">    print(request.FILES)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> request.FILES:</span><br><span class="line">        file = request.FILES.get(item)</span><br><span class="line">        file_name = file.name</span><br><span class="line">        <span class="keyword">with</span> open(file_name, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> file.chunks():</span><br><span class="line">                f.write(line)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/ctl/"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"文件"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>再见2018, 你好2019</title>
    <url>/2019/01/08/%E5%86%8D%E8%A7%812018,%20%E4%BD%A0%E5%A5%BD2019/</url>
    <content><![CDATA[<p>​    </p>
<blockquote>
<p>“人的眼睛是由黑、白两部分所组成的，可是神为什么要让人只能通过黑的部分去看东西？” “因为人生必须透过黑暗，才能看到光明。”    ——《塔木德》</p>
</blockquote>
<p>​                                </p>
<p>宿舍楼下有一家水果店, 已经是九月的末梢, 芒果,橙子,柚子…..整齐的放在一格一格的木头盒子里.</p>
<p>图书馆的二楼,有一株可以晒到早上八点的阳光的绿色小植物.</p>
<p>晾衣架上有一件白色的衬衫.</p>
<p>2018年就像我的2015年.</p>
<a id="more"></a>

<p>晚上的十点钟, 教学楼的第四层,像往常一样回到寝室,我在其中.</p>
<p>从教学楼门口,我往右走,然后路过很多棵至今也叫不出名字的树,整整几分钟.开始重复昨天的单词, admire, determine….</p>
<p>有时候如果我坐在靠窗的位置,就一直看着窗外.然后想象远方的样子和未来,自己能否如愿以偿呢.</p>
<p>我总觉得2018年还特别近,不是现在就是昨天.</p>
<p>事实它是昨天,我清楚地知道.</p>
<p>不会等你来拆穿.</p>
<p>每天十点,我大概会和你走过几百米的距离送你回寝室.</p>
<p>路灯昏暗,像沉在海底的渔灯.</p>
<p>我的2018年有很多种情节,却不是一部电影.</p>
<p>有些特别,让人难忘.</p>
<p>比如早晨六点钟,我会站在图书馆门前的石柱前,准时的背着Dear Mr Wang</p>
<p>比如中午吃饭,实践是检验真理的唯一标准</p>
<p>比如晚上的十点钟,满载星月而归.</p>
<p>2018年的小半年像是个灾难片,心理脆弱到看到一碗鸡汤都会迫不及待的喝下.</p>
<p>&lt;&lt;余震&gt;&gt;里说: 人们倒下去的方式,都是大同小异的.可是天灾过去后,每个人站起来的姿势,却是千姿百态的.</p>
<p>我倒下去过.</p>
<p>花开不败.</p>
<p>考试那天是临近冬至的.最高气温5摄氏度,最低气温零下二度,有海风.</p>
<p>风很大,我和她走在去考场的路上,我想起了这一年一起走过的坎坷曲折.</p>
<p>我想,就算没考上,也要在一起啊.</p>
<p>我喝了口水, 喝第一口的时候差点呛出了眼泪,当我喝第二口的时候,我想起了临近考试的那些日日夜夜.</p>
<p>我们台灯下彻夜苦读背书的日子,一起模拟的日子,一起吐糟的日子.</p>
<p>还有那些朋友们的帮助.</p>
<p>突然回头,看看我.</p>
<p>我喝掉了杯子里剩下的水,却没有清醒过来.</p>
<p>反而变得糊涂.</p>
<p>我打开数学课本,那张不怎么会做的考卷夹在课本中间.</p>
<p>我看到第一套选择题问极限是否收敛.</p>
<p>我写的答案是收敛.在0-1范围内.</p>
<p>一杯水和一个安静的夜晚陪伴我.</p>
<p>我很喜欢她, 她会被六月的空气氧化.</p>
<p>我是她的还原剂.</p>
<p>我在那家水果店买了一个柚子,</p>
<p>晾衣架上还挂着我的白衬衫.</p>
<p>2018年下了好几场大雨, 好雨时节</p>
<p>在漫长的成长过程中,两件事是对的</p>
<p>一是不要拒绝成长,二是学会忍受孤独</p>
<p>当这个世界安静下来的时候,</p>
<p>就是你听到自己的时候.</p>
<p>只要你想,你期盼的那个自己,</p>
<p>总会带着明媚的阳光,照进你的心房,</p>
<p>如盛夏一般.</p>
<p>你好 2019, </p>
<p>再见 2018.</p>
<p>​                                2019 1.9 深夜.</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1323977028&auto=1&height=66"></iframe>





]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Python数据库简易教程</title>
    <url>/2018/05/20/SQL%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库:"></a>创建数据库:</h2><p><code>CREAT TABLE</code> 表名称 (键值)</p>
<p>其中必须有一个主键 即为 <code>PRIMARY</code> 键</p>
<p><code>NOT NULL</code> 即为插入数据不能为空</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">"test.db"</span>)</span><br><span class="line">print(<span class="string">"Open data successful"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开游标</span></span><br><span class="line">c = conn.cursor()</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="SQL-数据插入"><a href="#SQL-数据插入" class="headerlink" title="SQL 数据插入"></a>SQL 数据插入</h2><p><code>INSERT INTO COMPANY</code> (字段) <code>VALUE</code>(值)</p>
<p>插入一条数据 <code>INSERT INTO COMPANY (ID, NAME, AGE, ADDRESS) VALUES (1, &quot;CTL&quot;, 18, &quot;山东青岛&quot;)</code></p>
<p>在指定列中添加数据 <code>INSERT INTO COMPANY (ID, NAME) VALUES (2, &quot;CTL2&quot;)</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">creat_table</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建表 company 字段 ID NAME AGE ADDRESS ID是主键 均为非空值</span></span><br><span class="line">    c.execute(<span class="string">"""CREATE TABLE COMPANY (ID INT PRIMARY KEY NOT NULL ,</span></span><br><span class="line"><span class="string">                                       NAME TEXT NOT NULL ,</span></span><br><span class="line"><span class="string">                                       AGE INT NOT NULL ,</span></span><br><span class="line"><span class="string">                                       ADDRESS CHAR(50))"""</span>)</span><br><span class="line">    print(<span class="string">"Table creat successfully"</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure>

<h2 id="如果不需要变量传入，-直接去掉-加入字符串"><a href="#如果不需要变量传入，-直接去掉-加入字符串" class="headerlink" title="如果不需要变量传入， 直接去掉{}加入字符串"></a>如果不需要变量传入， 直接去掉{}加入字符串</h2><h3 id="LIKE-操作符"><a href="#LIKE-操作符" class="headerlink" title="LIKE 操作符"></a>LIKE 操作符</h3><ul>
<li><p>如果要在上面的<code>COMPANY</code>表中选择名字中带有C的人出来的话</p>
</li>
<li><p>使用SELECT语句 <code>SELECT * FROM COMPANY WHERE NAME LIKE &#39;C%&#39;</code></p>
</li>
<li><p>选择特定字段的人出来 <code>SELECT * FROM COMPANY WHERE ID=&#39;1&#39;</code></p>
</li>
</ul>
<h3 id="SQL通配符"><a href="#SQL通配符" class="headerlink" title="SQL通配符"></a>SQL通配符</h3><ul>
<li><p>如果要选择不包含18岁的人 <code>SELECT * FROM COMPANY WHERE AGE NOT LIKE &#39;%18%&#39;</code>       %通配符</p>
</li>
<li><p>选择名字中带有CTL的字段 <code>SELECT * FROM COMPANY WHERE NAME LIKE &#39;C_T_L&#39;</code>                                 下划线_表示通配符</p>
</li>
<li><p>选择名字中不以CTL开头的字段 <code>SELECT * FROM COMPANY WHERE NAME LIKE &#39;[!CTL]%&#39;</code></p>
</li>
</ul>
<h3 id="SQL-IN"><a href="#SQL-IN" class="headerlink" title="SQL IN"></a>SQL IN</h3><ul>
<li>如果选取年龄为18城市为山东青岛的人 <code>SELECT * FROM COMPANY WHERE AGE AND ADDRESS IN (18, &#39;山东青岛&#39;)</code></li>
</ul>
<h3 id="SQL-运算"><a href="#SQL-运算" class="headerlink" title="SQL 运算"></a>SQL 运算</h3><ul>
<li>选取年龄大于18岁的人 <code>SELECT * FROM COMPANY WHERE AGE &gt; 18</code></li>
</ul>
<h3 id="SQL-块数据"><a href="#SQL-块数据" class="headerlink" title="SQL 块数据"></a>SQL 块数据</h3><ul>
<li>如果选取CTL到CTL3之间的数据 <code>SELECT * FROM COMPANY WHERE NAME BETWEEN &#39;CTL&#39; AND &#39;CTL3&#39;</code></li>
</ul>
<h3 id="SQL-数据移动"><a href="#SQL-数据移动" class="headerlink" title="SQL 数据移动"></a>SQL 数据移动</h3><ul>
<li><p>如果把一个表的数据转移到另一个表<code>SELECT * INTO COMPANY2 FROM COMPANY</code></p>
</li>
<li><p>如果只是复制部分数据<code>SELECT NAME, AGE INTO COMPANY2 FROM COMPANY</code></p>
</li>
<li><p>如果只复制名字是CTL的数据<code>SELECT * INTO COMPANY2 FROM COMPANY WHERE NAME=&#39;CTL&#39;</code></p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_data</span><span class="params">(ID, NAME, AGE, ADDRESS)</span>:</span></span><br><span class="line">    <span class="comment"># 插入数据 insert into</span></span><br><span class="line">    c.execute(<span class="string">f'INSERT INTO COMPANY (ID, NAME, AGE, ADDRESS) VALUES ("<span class="subst">&#123;ID&#125;</span>", "<span class="subst">&#123;NAME&#125;</span>", "<span class="subst">&#123;AGE&#125;</span>", "<span class="subst">&#123;ADDRESS&#125;</span>")'</span>)</span><br><span class="line">    conn.commit()</span><br></pre></td></tr></table></figure>

<h3 id="SQL-数据更新"><a href="#SQL-数据更新" class="headerlink" title="SQL 数据更新"></a>SQL 数据更新</h3><ul>
<li><p><code>UPDATE</code> 表名称 <code>SET</code> 列名称 <code>=</code> 新值 <code>WHERE</code> 列名称 <code>=</code> 某值</p>
</li>
<li><p>更新ID为1的名称为<code>HELLO UPDATE COMPANY SET NAME=&#39;HELLO&#39; WHERE ID=1</code></p>
</li>
<li><p>更新某列 <code>UPDATE COMPANY SET AGE=18 WHERE ADDRESS=&#39;山东青岛&#39;</code> 更新山东青岛地区所有人的年龄为18</p>
</li>
<li><p>更新某一行的若干列 <code>UPDATE COMPANY SET AGE=18,NAME=&quot;HZT&quot; WHERE ADDRESS=&#39;山东青岛&#39;</code> 更新山东青岛地区人的年龄为18名字为HZT</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">serch_data</span><span class="params">(ID)</span>:</span></span><br><span class="line">    cursor = c.execute(<span class="string">f'SELECT ID, NAME, AGE, ADDRESS FROM COMPANY WHERE ID=<span class="subst">&#123;ID&#125;</span>'</span>)</span><br><span class="line">    <span class="keyword">return</span> cursor</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_data</span><span class="params">(NAME, ID)</span>:</span></span><br><span class="line">    c.execute(<span class="string">f"UPDATE COMPANY SET NAME=<span class="subst">&#123;NAME&#125;</span> WHERE ID=<span class="subst">&#123;ID&#125;</span>"</span>)</span><br><span class="line">    conn.commit()</span><br></pre></td></tr></table></figure>

<h3 id="SQL-删除"><a href="#SQL-删除" class="headerlink" title="SQL 删除"></a>SQL 删除</h3><ul>
<li><p><code>DELETE FROM 表名称 WHERE 列名称 = 值</code></p>
</li>
<li><p>删除某行 <code>DELETE FROM COMPANY WHERE NAME=&#39;CTL&#39;</code></p>
</li>
<li><p>删除所有行 <code>DELETE FROM table_name</code></p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_data</span><span class="params">(ID)</span>:</span></span><br><span class="line">    c.execute(<span class="string">f"DELETE FROM COMPANY WHERE ID=<span class="subst">&#123;ID&#125;</span>"</span>)</span><br><span class="line">    conn.commit()</span><br></pre></td></tr></table></figure>

<h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># insert_data(3, "CTL3", 20, "山东青岛")</span></span><br><span class="line">    <span class="comment"># delete_data(2)</span></span><br><span class="line">    update_data(<span class="string">"Hello"</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3类型注解</title>
    <url>/2018/05/19/%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="函数注解"><a href="#函数注解" class="headerlink" title="函数注解"></a>函数注解</h2><p>定义函数的时候对参数和返回值添加注解.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a: int, b: int, c: str = <span class="number">5</span>)</span> -&gt; tuple:</span></span><br><span class="line">    <span class="keyword">return</span> a,b,c</span><br></pre></td></tr></table></figure>

<ul>
<li><code>a: int</code> 注解参数</li>
<li><code>c: str = 5</code> 注解有默认值的参数</li>
<li><code>-&gt; tuple</code> 注解返回值类型</li>
</ul>
<p>注解内容既可以是类型说明，也可以是字符串，也可以是表达式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a: <span class="number">1</span>+<span class="number">1</span>)</span> -&gt; 1 + 1:</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure>

<h2 id="获取定义函数的注解"><a href="#获取定义函数的注解" class="headerlink" title="获取定义函数的注解"></a>获取定义函数的注解</h2><ul>
<li><p>使用<code>__annotations__</code>,例如<code>add.__annotations</code>.</p>
</li>
<li><p><code>inspect.signature</code>:</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line">sig = inspect.signature(add)</span><br><span class="line"><span class="comment"># 字典类型</span></span><br><span class="line">print(sig.paraments)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数注解</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> sig.parameters.items():</span><br><span class="line">    print(<span class="string">'&#123;k&#125;: &#123;a!r&#125;'</span>.format(k=k, a=v.annotation))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回值注解</span></span><br><span class="line">print(sig.return_annotation)</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Mine</title>
    <url>/2018/05/07/Mine/</url>
    <content><![CDATA[<p>你是我的睡梦轻轻</p>
<p>我的满天繁星</p>
<p>And My Everything</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>Zhi</title>
    <url>/2018/05/04/one/</url>
    <content><![CDATA[<p>先是太胆小，明知不该做的事却不敢不做</p>
<p>后来也还是太胆小，明知该做的事却不敢去做</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>那些年</title>
    <url>/2018/04/11/Those%20Days/</url>
    <content><![CDATA[<p>老师曾说千岛寒流遇到日本暖流时，会温暖整个海域</p>
<p>我突然想起了你，那是我后来唯一记得的地理题。</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>Morning</title>
    <url>/2018/04/02/%E6%97%A9/</url>
    <content><![CDATA[<p>思念某个地方</p>
<p>多半是因为那里曾经有你爱的人和你爱的过去</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>HA插件更新机制</title>
    <url>/2018/03/29/HA%E6%8F%92%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<!-- # HA插件更新机制 -->

<h2 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h2><p>以和风天气为实例</p>
<p>计时方式:  <code>TIME_BETWEEN_UPDATES = timedelta(seconds=1800)</code></p>
<a id="more"></a>
<p>首先导入 <code>from homeassistant.util import Throttle</code></p>
<p>在 <code>WeatherData</code>类中的<code>update</code>函数中加入装饰器  <code>@Throttle(TIME_BETWEEN_UPDATES)</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherData</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @Throttle(TIME_BETWEEN_UPDATES)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p>在 <code>HeWeatherSensor</code> 类中的<code>update</code>函数中调用Data类中的更新函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeWeatherSensor</span><span class="params">(Entity)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._data.update()</span><br><span class="line">        self._updatetime = self._data.updatetime</span><br></pre></td></tr></table></figure>

<p>平台设置内传入参数，下同</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setup_platform</span><span class="params">(hass, config, add_devices, discovery_info=None)</span>:</span></span><br><span class="line">    _LOGGER.info(<span class="string">"Setup platform sensor.HeWeather"</span>)</span><br><span class="line">    city = config.get(CONF_CITY)</span><br><span class="line">    appkey = config.get(CONF_APPKEY)</span><br><span class="line">    aqi_city = config.get(CONF_AQI_CITY)</span><br><span class="line">    data = WeatherData(hass, city, appkey, aqi_city)</span><br><span class="line"></span><br><span class="line">    dev = []</span><br><span class="line">    <span class="keyword">for</span> option <span class="keyword">in</span> config[CONF_OPTIONS]:</span><br><span class="line">        dev.append(HeWeatherSensor(data, option))</span><br><span class="line">    add_devices(dev, <span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<h2 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h2><p>在Data类中 调用<code>Throttle</code>函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Data</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Get the latest data from Darksky."""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **args)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.update = Throttle(interval)(self._update)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 更新操作</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p>然后在实体类中调用数据类的更新</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sensor</span><span class="params">(Entity)</span>:</span></span><br><span class="line">    <span class="string">"""Implementation of a Dark Sky sensor."""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, forecast_data, **args)</span>:</span></span><br><span class="line">        self.forecast_data = forecast_data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.forecast_data.update()</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>For You</title>
    <url>/2018/03/26/%E9%81%87%E8%A7%81%E5%A5%B9%E9%82%A3%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<p>遇见她的那一天，我跑得上气不接下气。<br>生怕慢一点，她就会淹没在人海里，淹没在岁月的尘埃里。</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>上元节</title>
    <url>/2018/03/02/%E4%B8%8A%E5%85%83%E8%8A%82/</url>
    <content><![CDATA[<blockquote>
<p>东风夜放花千树。更吹落，星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。</p>
</blockquote>
<p>又是一年上元夜，过了今天，也算是完整的告别了2017年。人们陆陆续续开始了新的一年的工作学习。我也一样，不久就要奔赴在旅程中。新的一年注定不是平静的一年。愿我可以坚守本心。永远走在前行的路上。</p>
<p>最后送给自己一句话吧<code>看清一个人又何必去揭穿，讨厌一个人又何必去翻脸。活着总有看不惯的人，就如别人看不惯我们。</code></p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>HA汉化的两种方式</title>
    <url>/2018/02/21/HA%E5%AE%9E%E4%BD%93%E7%9A%84%E4%B8%A4%E7%A7%8D%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="使用-generate-entity-id-生成实体ID"><a href="#使用-generate-entity-id-生成实体ID" class="headerlink" title="使用 generate_entity_id() 生成实体ID"></a>使用 <code>generate_entity_id()</code> 生成实体ID</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeWeatherSensor</span><span class="params">(Entity)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data, option, hass)</span>:</span></span><br><span class="line">        self._hass = hass</span><br><span class="line">        self.entity_id = generate_entity_id(</span><br><span class="line"><span class="string">'sensor.&#123;&#125;'</span>, sensor_name, hass=self._hass)</span><br><span class="line">        self._friendly_name = OPTIONS[option][<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._friendly_name</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>这样通过 <code>generate_entity_id()</code>函数在实体表里生成实体名称，汉化将通过name返回</p>
<h1 id="使用-registry-name-进行汉化"><a href="#使用-registry-name-进行汉化" class="headerlink" title="使用 registry_name 进行汉化"></a>使用 <code>registry_name</code> 进行汉化</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeWeatherSensor</span><span class="params">(Entity)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data, option)</span>:</span></span><br><span class="line">        self._data = data</span><br><span class="line">        self._object_id = OPTIONS[option][<span class="number">0</span>]</span><br><span class="line">        self.registry_name = OPTIONS[option][<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._object_id</span><br></pre></td></tr></table></figure>

<p>此方法不会生成实体表。汉化名称通过 <code>registry_name</code>进行传递，name函数用于返回实体名称。</p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>不要说重逢</title>
    <url>/2018/02/18/%E6%88%91%E4%BB%AC%E4%B8%8D%E8%A6%81%E5%86%8D%E8%AF%B4%E9%87%8D%E9%80%A2%E7%9A%84%E8%AF%9D/</url>
    <content><![CDATA[<p>我们不要再说重逢的话</p>
<p>人生是一首残缺的诗</p>
<p>不是因为有了上句</p>
<p>就必然会有下句。</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>深情</title>
    <url>/2018/02/18/%E4%B8%94%E6%9C%89%E6%B7%B1%E6%83%85%E5%85%B1%E7%99%BD%E5%A4%B4/</url>
    <content><![CDATA[<p>有多少深情可供回首<br>有多少爱恋可供白头</p>
<p>让你活着是爱<br>不愿让你离开</p>
<p>让你死去也是爱<br>不愿看你受苦。</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
  <entry>
    <title>平流层</title>
    <url>/2018/02/15/%E5%B9%B3%E6%B5%81%E5%B1%82/</url>
    <content><![CDATA[<p>你是你自己</p>
<p>一生的情人</p>
]]></content>
      <tags>
        <tag>诗与酒</tag>
      </tags>
  </entry>
</search>
